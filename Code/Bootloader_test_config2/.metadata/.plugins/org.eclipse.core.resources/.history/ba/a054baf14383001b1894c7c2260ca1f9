#include <hidef.h> /* for EnableInterrupts macro */
#include "derivative.h" /* include peripheral declarations */

void Flash_write(unsigned long address);
void Flash_erase(unsigned long address);

void Flash_write(unsigned long address ){
	unsigned long *pdst = (unsigned long *)address;
	unsigned int value = 0x54454554;
	
	if (FCDIV_FDIVLD){
		FSTAT_FCBEF = 1;
		if (FSTAT_FCBEF == 1){
			if(!FSTAT_FPVIOL && !FSTAT_FACCERR){
				//pdst=(unsigned long *)0x8004;
				*pdst = value;
				FCMD = 0x20; 
				FSTAT = 0x80;
				while (!FSTAT_FCCF){}
			}
		}
	}
	
	
}

void Flash_erase(unsigned long address ){
	unsigned long *pdst = (unsigned long *)address;
	unsigned int value = 0x54454554;
	
	if (FCDIV_FDIVLD){
		FSTAT_FCBEF = 1;
		if (FSTAT_FCBEF == 1){
			if(!FSTAT_FPVIOL && !FSTAT_FACCERR){
				//pdst=(unsigned long *)0x8004;
				*pdst = value;
				FCMD = 0x40; 
				FSTAT = 0x80;
				while (!FSTAT_FCCF){}
			}
		}
	}
	
	
}


void main(void) {

	unsigned long *pdst;
	unsigned int value = 0x54454554;
	unsigned long address1 = 0x8000;
	unsigned long address2 = 0x2000;
	
  
	// Reference Internal clock*
	ICSSC_DRST_DRS=0;
	ICSSC_DMX32=1;
	ICSSC_IREFST =1;
	ICSSC_CLKST1 = 0;
	ICSSC_CLKST0 = 0;
	ICSSC_OSCINIT = 0;
	ICSSC_FTRIM = 0;	
	
	ICSC1_CLKS1 = 0;
	ICSC1_CLKS0 = 0;
	ICSC1_IREFS = 1;

	ICSC2_BDIV1 = 0;
	ICSC2_BDIV0 = 0;
	
	// Flash clock
	FCDIV_FDIVLD = 1;
	FCDIV_PRDIV8 = 1;
	FCDIV_FDIV = 0x7; 
	
	// clock MCLK
	SMCLK_MPE = 1; 
	SMCLK_MCSEL2 = 0; 
	SMCLK_MCSEL1 = 0; 
	SMCLK_MCSEL0 = 1; 
	
	// Protection
	//FPROT_FPS = 0x7F; 
	//FPROT_FPOPEN = 1;
	//SOPT1_WAITE = 0;
	
	DisableInterrupts;
	Flash_write(address1);
	EnableInterrupts;
	DisableInterrupts;
	Flash_write(address2);
	EnableInterrupts;

  for(;;) {
    __RESET_WATCHDOG();	/* feeds the dog */
  } /* loop forever */
  /* please make sure that you never leave main */
}
